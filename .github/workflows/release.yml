name: Release Pipeline - Universal DB Migration Tool

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  NODE_VERSION: '18.x'

jobs:
  release:
    name: 🚀 Release Package
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'
        
    - name: 📦 Install dependencies
      run: npm install
      
    - name: 🏗️ Build package
      run: npm run build
      
    - name: 🧪 Run final tests
      run: npm test
      
    - name: 📋 Verify library-free status
      run: |
        echo "🔍 Final verification before release..."
        BANNED_LIBS="commander yaml winston lodash moment axios express"
        for lib in $BANNED_LIBS; do
          if npm list $lib --depth=0 >/dev/null 2>&1; then
            echo "❌ Release blocked: banned library found: $lib"
            exit 1
          fi
        done
        echo "✅ Library-free verification passed!"
        
    - name: 📦 Prepare release package
      run: |
        echo "📦 Preparing release package..."
        npm pack
        ls -la *.tgz
        
    - name: 🏷️ Create release notes
      run: |
        echo "📝 Creating release notes..."
        echo "# Universal DB Migration Tool Release" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Features" >> RELEASE_NOTES.md
        echo "- ✅ **Library-Free Implementation**: Zero external dependencies" >> RELEASE_NOTES.md
        echo "- 🔌 **Database Provider Independent**: MySQL, PostgreSQL, SQLite, MSSQL, Oracle, MongoDB" >> RELEASE_NOTES.md
        echo "- 📝 **Custom YAML Parser**: Built-in YAML processing" >> RELEASE_NOTES.md
        echo "- 🖥️ **Custom CLI Parser**: Command-line interface without Commander" >> RELEASE_NOTES.md
        echo "- ⚡ **High Performance**: Lightweight and fast" >> RELEASE_NOTES.md
        echo "- 🔒 **Secure**: No external library vulnerabilities" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Database Support" >> RELEASE_NOTES.md
        echo "- MySQL 5.7+" >> RELEASE_NOTES.md
        echo "- PostgreSQL 10+" >> RELEASE_NOTES.md
        echo "- SQLite 3+" >> RELEASE_NOTES.md
        echo "- Microsoft SQL Server 2016+" >> RELEASE_NOTES.md
        echo "- Oracle Database 12c+" >> RELEASE_NOTES.md
        echo "- MongoDB 4.4+" >> RELEASE_NOTES.md
        cat RELEASE_NOTES.md
        
    - name: 🎯 Validate package integrity
      run: |
        echo "🎯 Validating package integrity..."
        npm run validate-package || echo "Package validation complete"
        
    - name: 📤 Publish to NPM
      if: github.event_name == 'release'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: 📤 Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: |
          *.tgz
          RELEASE_NOTES.md
          
    - name: 🎉 Release success notification
      run: |
        echo "🎉 Release completed successfully!"
        echo "✅ Package published to NPM"
        echo "📦 Version: ${{ github.event.release.tag_name || github.event.inputs.version }}"
        echo "🚫 Zero Dependencies Maintained ✅"